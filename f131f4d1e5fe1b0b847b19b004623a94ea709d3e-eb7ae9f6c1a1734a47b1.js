(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[660],{3141:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return w}});var a=n(1151),r=n(7294),o=n(2670),s=n.n(o),l="style-module--logoDrawself--dd83b";function i(e){e.forEach((function(e){e.path.style.transition="none",e.path.style.strokeDasharray=`${e.pathLength} ${e.pathLength}`,e.path.style.strokeDashoffset=e.pathLength,e.path.style.fillOpacity="0",e.path.getBoundingClientRect()})),e[0].path.getBoundingClientRect();let t=0;e.forEach((function(e){e.path.style.transition=`stroke-dashoffset ${e.duration}s ${t}s ease-in-out, fill-opacity ${e.duration}s ${t}s ease-in-out`,e.path.style.strokeDashoffset="0",e.path.style.fillOpacity="1.0",t+=e.duration+.1}))}var c=()=>{const e=(0,r.useRef)();return(0,r.useLayoutEffect)((()=>{e.current=function(){const e=document.querySelector(`.${l}`),t=Array.from(e.querySelectorAll(".line")),n=Array.from(e.querySelectorAll(".shade"));return[].concat(t,n).map((function(e){const t=e.getTotalLength();return{path:e,pathLength:t,duration:.03*Math.pow(t,.5)}}))}(),i(e.current)})),r.createElement(s(),{className:l,onClick:()=>i(e.current)})},h=n(2874),u=n.n(h);var f=()=>{const{0:e,1:t}=(0,r.useState)(!1);return r.createElement(u(),{className:e?"style-module--coffeeDashedOn--24749":"style-module--coffeeDashedOff--72946",onClick:()=>t((e=>!e))})};var p=()=>{const{0:e,1:t}=(0,r.useState)(!1);return r.createElement(u(),{className:e?"style-module--coffeeDrawselfOn--a2dd1":"style-module--coffeeDrawselfOff--93e01",onClick:()=>t((e=>!e))})},m=n(8455),d=n.n(m);var g=()=>{const e=(0,r.useRef)();return(0,r.useLayoutEffect)((()=>{e.current=function(){const e=document.querySelector("#cupcakeDrawSelf");return Array.from(e.querySelectorAll(".line")).map((function(e){const t=e.getTotalLength();return{path:e,pathLength:t,duration:.03*Math.pow(t,.5)}}))}()})),r.createElement(d(),{id:"cupcakeDrawSelf",className:"style-module--cupcakeDrawself--fa834",onClick:()=>function(e){e.forEach((function(e){e.path.style.transition="none",e.path.style.strokeDasharray=`${e.pathLength} ${e.pathLength}`,e.path.style.strokeDashoffset=e.pathLength,e.path.getBoundingClientRect()})),e[0].path.getBoundingClientRect();let t=0;e.forEach((function(e){e.path.style.transition=`stroke-dashoffset ${e.duration}s ${t}s ease-in-out`,e.path.style.strokeDashoffset="0",t+=e.duration+.1}))}(e.current)})};var y=()=>{const e=(0,r.useRef)();return(0,r.useLayoutEffect)((()=>{e.current=function(){const e=document.querySelector("#cupcakeDrawselfFade"),t=Array.from(e.querySelectorAll(".line")),n=Array.from(e.querySelectorAll(".shade"));return[].concat(t,n).map((function(e){var t=e.getTotalLength();return{path:e,pathLength:t,duration:.03*Math.pow(t,.5)}}))}()})),r.createElement(d(),{id:"cupcakeDrawselfFade",className:"style-module--cupcakeDrawselfFade--89019",onClick:()=>function(e){e.forEach((function(e){e.path.style.transition="none",e.path.style.strokeDasharray=`${e.pathLength} ${e.pathLength}`,e.path.style.strokeDashoffset=e.pathLength,e.path.style.fillOpacity="0",e.path.getBoundingClientRect()})),e[0].path.getBoundingClientRect();let t=0;e.forEach((function(e){e.path.style.transition=`stroke-dashoffset ${e.duration}s ${t}s ease-in-out, fill-opacity ${e.duration}s ${t}s ease-in-out`,e.path.style.strokeDashoffset="0",e.path.style.fillOpacity="1.0",t+=e.duration+.1}))}(e.current)})},k=n(2906);function E(e){const t=Object.assign({p:"p",h2:"h2",pre:"pre",code:"code",ul:"ul",li:"li"},(0,a.ah)(),e.components);return r.createElement(r.Fragment,null,r.createElement(c),"\n",r.createElement(t.p,null,"Hey that animation was pretty cool, right? Just click on him again to re-run it. Today's post is on how to create awesome SVG line animations like the one above."),"\n",r.createElement(t.h2,null,"SVG Paths"),"\n",r.createElement(t.p,null,"The SVG path format can seem rather cryptic:"),"\n",r.createElement(t.pre,null,r.createElement(t.code,{className:"language-xml"},'<svg id="coffee" class="coffee" xmlns="http://www.w3.org/2000/svg" width="250" height="375" viewBox="0 0 250 375">\r\n    <path style="fill:none;stroke:#000000;stroke-width:5;"\r\n        d="m 19.892717,176.8917 1.190429,139.87515 c 3.078475,25.1789 11.076205,36.7905 41.069744,43.45065 21.81719,4.35025 40.50001,2.4318 60.11656,2.38085 29.56052,-2.41735 45.03841,-16.4321 47.61711,-41.06975 4.77735,-29.65355 -2.57891,-63.04595 2.3117,-95.7242 2.34095,-4.81735 1.6138,-10.7567 11.3782,-12.6047 4.893,-0.9099 8.9718,-0.73415 12.60465,0.035 7.01395,2.64455 11.4282,6.27795 13.7335,12.4634 2.27135,9.325 1.9101,18.65 1.04165,27.97505 -0.6871,6.0357 -2.34285,11.2697 -4.6129,15.32675 -5.56075,6.92775 -13.47125,11.10545 -19.3264,17.11985 -1.76685,2.77765 -1.1949,6.44065 -1.05965,9.21835 0.5008,3.07045 2.91735,4.2252 5.3569,5.3569 3.42525,0.73005 6.89725,1.2265 10.71385,0 7.5242,-2.499 12.99665,-7.5627 19.0468,-11.90425 4.9011,-5.3231 8.77275,-12.36185 12.4995,-19.64205 3.12195,-6.4744 3.27535,-14.4331 4.1665,-22.0229 -0.119,-7.5046 -0.4315,-14.9127 -1.33925,-22.02295 -4.8731,-19.68355 -18.54195,-35.8845 -38.54005,-39.28405 -5.1125,-0.42 -11.90225,0.1125 -20.622,-1.12135 -5.4145,-2.00515 -6.06795,-5.30365 -6.1265,-8.78685 0.78285,-7.14255 -0.6129,-14.4956 -4.20258,-21.63815 -6.66151,-9.72085 -18.17041,-13.45375 -31.54633,-14.88035 -22.53748,-3.28225 -43.72335,-3.05035 -64.28306,-1.1904 -9.30141,0.7866 -18.504954,1.1328 -28.570254,5.3569 -2.97607,1.27915 -5.95214,2.72185 -8.9282,5.95215 -1.224895,4.1665 -1.133765,8.333 2.38085,12.4995 7.77138,5.5689 15.83991,9.5035 24.403764,10.71385 15.9467,2.91015 32.12713,5.0412 49.25393,4.01765 13.53319,-1.55345 27.199,-2.84165 37.64724,-10.565 7.41696,-3.9148 9.57699,-9.80095 10.71385,-16.0708 -1.1491,-6.68715 -2.97648,-13.34485 -13.0947,-19.64205 -10.03057,-6.67185 -20.92652,-10.1706 -32.14153,-12.4995 -17.96892,-2.87915 -35.80275,-1.9664 -52.974,-4.46395 -16.962344,-2.0638 -17.978594,-7.64395 -17.558814,-14.582746 -1.55086,-4.59945 7.83395,-12.36765 13.68992,-12.2019 10.898904,-1.20005 22.995044,-2.5708 38.986494,-1.488 10.18657,2.1145 20.57079,4.03135 31.54631,5.3569 19.23428,-1.2312 23.56941,-6.5704 24.40375,-12.4995 0.76904,-5.48375 0.84257,-11.20525 -4.16649,-17.856405 -3.3469,-3.83015 -8.16664,-6.482 -15.47555,-7.14255 -25.80935,-0.76405 -51.29432,5.6476 -79.758614,5.95215 -18.34454,-0.4225 -32.777509,-4.74995 -38.837699,-15.4756 -0.686105,-6.3489 -1.214195,-12.99545 7.737779,-19.3444 7.163605,-5.637 17.07073,-10.58535 28.9326,-12.3071"\r\n    />\r\n</svg>\n')),"\n",r.createElement(t.p,null,"In reality nobody sane edits path elements by hand, and the best way to change them is with the use of an SVG editor like ",r.createElement("a",{class:"blueLink",href:"https://inkscape.org/"},"Inkscape"),'. I create my SVGs in Inkscape then cut out the "bloat elements" Inkscape adds that aren\'t needed.'),"\n",r.createElement(t.h2,null,"Single Path Animations"),"\n",r.createElement(t.p,null,"We'll start with a simple single path SVG:"),"\n",r.createElement("div",{className:k.rY},r.createElement("div",{className:k.U4},r.createElement(u())),r.createElement("div",{className:k.y4},r.createElement(f))),"\n",r.createElement(t.pre,null,r.createElement(t.code,{className:"language-css"},".coffee-dashed path {\r\n  stroke-dasharray: 20 20;\r\n  stroke-dashoffset: 1547;\r\n  animation: coffee-dash 20s linear infinite;\r\n}\r\n@keyframes coffee-dash {\r\n  100% {\r\n    stroke-dashoffset: 0;\r\n  }\r\n}\n")),"\n",r.createElement(t.p,null,"We can add dashes to an SVG path with the use of the ",r.createElement(t.code,null,"stroke-dasharray")," property, the first number gives the length of the dashes and the second gives the length of the gaps. The ",r.createElement(t.code,null,"stroke-dashoffset")," property specifies where the dasharray starts. By changing the ",r.createElement(t.code,null,"stroke-dashoffset")," from the path length to 0 using a ",r.createElement(t.code,null,"@keyframes")," animation we can move the dashes about (try clicking on the dashed mug)."),"\n",r.createElement(t.p,null,"Now imagine we made the dashes and gaps the length of the path, such that we only ever see one dash. To do this we increase the ",r.createElement(t.code,null,"stroke-dasharray")," values to the path length and we've got a coffee mug that draws itself:"),"\n",r.createElement(p),"\n",r.createElement(t.pre,null,r.createElement(t.code,{className:"language-css"},".coffee-drawself path {\r\n  stroke-dasharray: 1547 1547;\r\n  stroke-dashoffset: 1547;\r\n  animation: draw 15s linear infinite;\r\n}\r\n@keyframes draw {\r\n  0% {\r\n    stroke-dashoffset: 1547;\r\n  }\r\n  75%,\r\n  100% {\r\n    stroke-dashoffset: 0; /* Pause for 75%-100% of animation */\r\n  }\r\n}\n")),"\n",r.createElement(t.p,null,"But wait, how do you know the path length? It turns out there is a handy JavaScript method ",r.createElement(t.code,null,"getTotalLength")," that does this for you:"),"\n",r.createElement(t.pre,null,r.createElement(t.code,{className:"language-javascript"},'var path = document.querySelector(".coffee-drawself path");\r\nvar length = path.getTotalLength(); // 1546.7664794921875\n')),"\n",r.createElement(t.h2,null,"Multi-path Animations"),"\n",r.createElement(t.p,null,"To do multi-path animations we can reproduce what we did for single line animations in JavaScript, then repeat that over all the paths in the SVG. Try clicking on this cupcake:"),"\n",r.createElement(g),"\n",r.createElement(t.pre,null,r.createElement(t.code,{className:"language-javascript"},'var cupcake = document.querySelector("#cupcakeDrawSelf");\r\nvar cupcakePaths = Array.from(cupcake.querySelectorAll("path"));\r\nvar cupcakeAnimations = cupcakePaths.map(function(path) {\r\n  var pathLength = path.getTotalLength();\r\n  var duration = Math.pow(pathLength, 0.5) * 0.03;\r\n  return { path, pathLength, duration };\r\n});\r\n\r\nfunction runCupcakeAnimations() {\r\n  // Initial conditions\r\n  cupcakeAnimations.forEach(function(animation) {\r\n    animation.path.style.transition = "none"; // Clear previous transition => fast removal\r\n    animation.path.style.strokeDasharray = `${animation.pathLength} ${animation.pathLength}`;\r\n    animation.path.style.strokeDashoffset = animation.pathLength;\r\n    animation.path.getBoundingClientRect(); // Trigger reflow of each path\r\n  });\r\n\r\n  // Triggering a reflow on first path so we animate from here\r\n  cupcakeAnimations[0].path.getBoundingClientRect();\r\n\r\n  // Run line animations\r\n  var begin = 0;\r\n  cupcakeAnimations.forEach(function(animation) {\r\n    animation.path.style.transition = `stroke-dashoffset ${animation.duration}s ${begin}s ease-in-out`;\r\n    animation.path.style.strokeDashoffset = "0";\r\n    begin += animation.duration + 0.1; // Slight 0.1s delay for drawing effect\r\n  });\r\n}\r\n\r\ncupcake.addEventListener("click", runCupcakeAnimations);\n')),"\n",r.createElement(t.p,null,"Finally if you want to make things really snazzy you can add fade effects by varying ",r.createElement(t.code,null,"fill-opacity")," and adding path class names to differentiate between lines and shade:"),"\n",r.createElement(y),"\n",r.createElement(t.pre,null,r.createElement(t.code,{className:"language-javascript"},'var cupcakeFade = document.querySelector("#cupcakeDrawselfFade");\r\nvar cupcakeLines = Array.from(cupcakeFade.querySelectorAll(".line"));\r\nvar cupcakeShades = Array.from(cupcakeFade.querySelectorAll(".shade"));\r\nvar cupcakeFadePaths = [...cupcakeLines, ...cupcakeShades]; // Run shades last.\r\n\r\nvar cupcakeFadeAnimations = cupcakeFadePaths.map(function(path) {\r\n  var pathLength = path.getTotalLength();\r\n  var duration = Math.pow(pathLength, 0.5) * 0.03;\r\n  return { path, pathLength, duration };\r\n});\r\n\r\nfunction runCupcakeFadeAnimations() {\r\n  // Initial conditions\r\n  cupcakeFadeAnimations.forEach(function(animation) {\r\n    animation.path.style.transition = "none"; // Clear previous transition => fast removal\r\n    animation.path.style.strokeDasharray = `${animation.pathLength} ${animation.pathLength}`;\r\n    animation.path.style.strokeDashoffset = animation.pathLength;\r\n    animation.path.style.fillOpacity = "0";\r\n    animation.path.getBoundingClientRect(); // Trigger reflow of each path\r\n  });\r\n\r\n  // Triggering a reflow on first path so we animate from here\r\n  cupcakeFadeAnimations[0].path.getBoundingClientRect();\r\n\r\n  // Run line animations\r\n  var begin = 0;\r\n  cupcakeFadeAnimations.forEach(function(animation) {\r\n    animation.path.style.transition = `stroke-dashoffset ${animation.duration}s ${begin}s ease-in-out, fill-opacity ${animation.duration}s ${begin}s ease-in-out`;\r\n    animation.path.style.strokeDashoffset = "0";\r\n    animation.path.style.fillOpacity = "1.0";\r\n    begin += animation.duration + 0.1; // Slight 0.1s delay for drawing effect\r\n  });\r\n}\r\n\r\ncupcakeFade.addEventListener("click", runCupcakeFadeAnimations);\n')),"\n",r.createElement(t.p,null,"As always the full code for all these animations is on my ",r.createElement("a",{href:"https://github.com/george-pearson",class:"blueLink"},"GitHub"),"."),"\n",r.createElement(t.h2,null,"Further reading"),"\n",r.createElement(t.ul,null,"\n",r.createElement(t.li,null,"\n",r.createElement("a",{class:"blueLink",href:"https://jakearchibald.com/2013/animated-line-drawing-svg/"},"Jake Archibald's blog post on this in 2013!"),"\n"),"\n",r.createElement(t.li,null,"\n",r.createElement("a",{class:"blueLink",href:"https://css-tricks.com/svg-line-animation-works/"},"CSS-Tricks on SVG line animation"),"\n"),"\n"))}var w=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,a.ah)(),e.components);return t?r.createElement(t,e,r.createElement(E,e)):E(e)}},2906:function(e,t,n){"use strict";n.d(t,{U4:function(){return r},rY:function(){return a},y4:function(){return o}});var a="common-module--halfWidthContainer--10282",r="common-module--halfWidthLeft--83707",o="common-module--halfWidthRight--3851a"},2874:function(e,t,n){var a=n(7294);function r(e){return a.createElement("svg",e,a.createElement("path",{style:{fill:"none",stroke:"#000000",strokeWidth:"5"},d:"m 19.892717,176.8917 1.190429,139.87515 c 3.078475,25.1789 11.076205,36.7905 41.069744,43.45065 21.81719,4.35025 40.50001,2.4318 60.11656,2.38085 29.56052,-2.41735 45.03841,-16.4321 47.61711,-41.06975 4.77735,-29.65355 -2.57891,-63.04595 2.3117,-95.7242 2.34095,-4.81735 1.6138,-10.7567 11.3782,-12.6047 4.893,-0.9099 8.9718,-0.73415 12.60465,0.035 7.01395,2.64455 11.4282,6.27795 13.7335,12.4634 2.27135,9.325 1.9101,18.65 1.04165,27.97505 -0.6871,6.0357 -2.34285,11.2697 -4.6129,15.32675 -5.56075,6.92775 -13.47125,11.10545 -19.3264,17.11985 -1.76685,2.77765 -1.1949,6.44065 -1.05965,9.21835 0.5008,3.07045 2.91735,4.2252 5.3569,5.3569 3.42525,0.73005 6.89725,1.2265 10.71385,0 7.5242,-2.499 12.99665,-7.5627 19.0468,-11.90425 4.9011,-5.3231 8.77275,-12.36185 12.4995,-19.64205 3.12195,-6.4744 3.27535,-14.4331 4.1665,-22.0229 -0.119,-7.5046 -0.4315,-14.9127 -1.33925,-22.02295 -4.8731,-19.68355 -18.54195,-35.8845 -38.54005,-39.28405 -5.1125,-0.42 -11.90225,0.1125 -20.622,-1.12135 -5.4145,-2.00515 -6.06795,-5.30365 -6.1265,-8.78685 0.78285,-7.14255 -0.6129,-14.4956 -4.20258,-21.63815 -6.66151,-9.72085 -18.17041,-13.45375 -31.54633,-14.88035 -22.53748,-3.28225 -43.72335,-3.05035 -64.28306,-1.1904 -9.30141,0.7866 -18.504954,1.1328 -28.570254,5.3569 -2.97607,1.27915 -5.95214,2.72185 -8.9282,5.95215 -1.224895,4.1665 -1.133765,8.333 2.38085,12.4995 7.77138,5.5689 15.83991,9.5035 24.403764,10.71385 15.9467,2.91015 32.12713,5.0412 49.25393,4.01765 13.53319,-1.55345 27.199,-2.84165 37.64724,-10.565 7.41696,-3.9148 9.57699,-9.80095 10.71385,-16.0708 -1.1491,-6.68715 -2.97648,-13.34485 -13.0947,-19.64205 -10.03057,-6.67185 -20.92652,-10.1706 -32.14153,-12.4995 -17.96892,-2.87915 -35.80275,-1.9664 -52.974,-4.46395 -16.962344,-2.0638 -17.978594,-7.64395 -17.558814,-14.582746 -1.55086,-4.59945 7.83395,-12.36765 13.68992,-12.2019 10.898904,-1.20005 22.995044,-2.5708 38.986494,-1.488 10.18657,2.1145 20.57079,4.03135 31.54631,5.3569 19.23428,-1.2312 23.56941,-6.5704 24.40375,-12.4995 0.76904,-5.48375 0.84257,-11.20525 -4.16649,-17.856405 -3.3469,-3.83015 -8.16664,-6.482 -15.47555,-7.14255 -25.80935,-0.76405 -51.29432,5.6476 -79.758614,5.95215 -18.34454,-0.4225 -32.777509,-4.74995 -38.837699,-15.4756 -0.686105,-6.3489 -1.214195,-12.99545 7.737779,-19.3444 7.163605,-5.637 17.07073,-10.58535 28.9326,-12.3071"}))}r.defaultProps={width:"250",height:"375",viewBox:"0 0 250 375"},e.exports=r,r.default=r},8455:function(e,t,n){var a=n(7294);function r(e){return a.createElement("svg",e,[a.createElement("path",{className:"shade",style:{fill:"#f7e6c4",fillOpacity:"1"},d:"M 39.062991,231.37874 18.305927,142.30586 c -0.2475,-1.91925 1.253437,-5.62831 6.135625,-5.52562 l 196.614558,-0.3475 c 9.52819,-0.36875 11.33825,3.89356 10.48475,9.75393 l -20.02625,83.42032 c -1.3895,7.466 -5.50068,11.43275 -12.40237,11.81175 H 52.055931 c -10.71863,0.455 -11.05069,-4.5555 -12.99294,-10.03994 z",key:0}),a.createElement("path",{className:"shade",style:{fill:"#ee65a4",fillOpacity:"1"},d:"M 24.888864,136.58936 C 22.165239,124.8283 24.815734,113.31155 39.358301,102.3353 32.218181,84.05105 25.946861,65.91155 51.169991,53.02118 68.707801,31.32399 83.147491,6.2081747 122.63118,8.7271127 c 7.44662,0.431875 3.40325,7.2600623 3.40325,7.2600623 -8.29732,11.464005 -5.74994,21.503685 10.28462,29.043185 7.95788,3.72542 76.21159,9.48379 71.06144,57.00963 8.72581,3.0545 15.37144,9.85343 12.40237,33.95881",key:1}),a.createElement("path",{className:"line",style:{fill:"none",stroke:"#000000",strokeWidth:"6.25"},d:"M 24.888864,136.58936 C 22.165239,124.8283 24.815734,113.31155 39.358301,102.3353 32.218181,84.05105 25.946861,65.91155 51.169991,53.02118 68.707801,31.32399 83.147491,6.2081747 122.63118,8.7271127 c 7.44662,0.431875 3.40325,7.2600623 3.40325,7.2600623 -8.29732,11.464005 -5.74994,21.503685 10.28462,29.043185 7.95788,3.72542 76.21159,9.48379 71.06144,57.00963 8.72581,3.0545 15.37144,9.85343 12.40237,33.95881",key:2}),a.createElement("path",{className:"line",style:{fill:"none",stroke:"#000000",strokeWidth:"6.25"},d:"M 39.062991,231.37874 18.305927,142.30586 c -0.2475,-1.91925 1.253437,-5.62831 6.135625,-5.52562 l 196.614558,-0.3475 c 9.52819,-0.36875 11.33825,3.89356 10.48475,9.75393 l -20.02625,83.42032 c -1.3895,7.466 -5.50068,11.43275 -12.40237,11.81175 H 52.055931 c -10.71863,0.455 -11.05069,-4.5555 -12.99294,-10.03994 z",key:3}),a.createElement("path",{className:"line",style:{fill:"none",stroke:"#000000",strokeWidth:"6.25"},d:"M 51.169991,53.02118 C 97.879551,88.79786 151.54143,94.44186 207.38049,102.03999",key:4}),a.createElement("path",{className:"line",style:{fill:"none",stroke:"#000000",strokeWidth:"6.25"},d:"M 81.880611,136.58936 C 67.256301,126.97205 52.463551,118.02849 39.358301,102.3353",key:5}),a.createElement("path",{className:"line",style:{fill:"none",stroke:"#000000",strokeWidth:"6.25"},d:"M 68.592361,241.12342 57.666491,135.9988",key:6}),a.createElement("path",{className:"line",style:{fill:"none",stroke:"#000000",strokeWidth:"6.25"},d:"M 105.79943,241.12342 101.96055,136.58936",key:7}),a.createElement("path",{className:"line",style:{fill:"none",stroke:"#000000",strokeWidth:"6.25"},d:"m 143.8923,241.41874 3.54356,-104.53407",key:8}),a.createElement("path",{className:"line",style:{fill:"none",stroke:"#000000",strokeWidth:"6.25"},d:"M 180.50874,241.12342 192.91111,136.58936",key:9})])}r.defaultProps={width:"250",height:"250",viewBox:"0 0 250 250"},e.exports=r,r.default=r}}]);
//# sourceMappingURL=f131f4d1e5fe1b0b847b19b004623a94ea709d3e-eb7ae9f6c1a1734a47b1.js.map