{"version":3,"file":"f131f4d1e5fe1b0b847b19b004623a94ea709d3e-6f07afc1a07b8f16be31.js","mappings":"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","sources":["webpack://blog/./src/components/posts/logoDrawself/style.module.css","webpack://blog/./src/components/posts/logoDrawself/logoDrawself.js","webpack://blog/./src/components/posts/coffeeDashed/coffeeDashed.js","webpack://blog/./src/components/posts/coffeeDashed/style.module.css","webpack://blog/./src/components/posts/coffeeDrawself/coffeeDrawself.js","webpack://blog/./src/components/posts/coffeeDrawself/style.module.css","webpack://blog/./src/components/posts/cupcakeDrawself/cupcakeDrawself.js","webpack://blog/./src/components/posts/cupcakeDrawself/style.module.css","webpack://blog/./src/components/posts/cupcakeDrawselfFade/cupcakeDrawselfFade.js","webpack://blog/./src/components/posts/cupcakeDrawselfFade/style.module.css","webpack://blog/./src/pages/posts/2019-03-06-svg-path-animations/index.mdx","webpack://blog/./src/pages/posts/common.module.css","webpack://blog/./static/coffee.inline.svg","webpack://blog/./static/cupcake.inline.svg"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var logoDrawself = \"style-module--logoDrawself--dd83b\";","import React, { useLayoutEffect, useRef } from \"react\";\r\nimport Logo from \"../../../../static/logo.inline.svg\";\r\nimport * as style from \"./style.module.css\";\r\n\r\nconst LogoDrawself = () => {\r\n  const animations = useRef();\r\n  useLayoutEffect(() => {\r\n    animations.current = createAnimations();\r\n    runAnimations(animations.current);\r\n  });\r\n\r\n  return (\r\n    <Logo\r\n      className={style.logoDrawself}\r\n      onClick={() => runAnimations(animations.current)}\r\n    />\r\n  );\r\n};\r\n\r\nfunction createAnimations() {\r\n  const svg = document.querySelector(`.${style.logoDrawself}`);\r\n  const lines = Array.from(svg.querySelectorAll(\".line\"));\r\n  const shade = Array.from(svg.querySelectorAll(\".shade\"));\r\n  const paths = [...lines, ...shade];\r\n  return paths.map(function(path) {\r\n    const pathLength = path.getTotalLength();\r\n    const duration = Math.pow(pathLength, 0.5) * 0.03;\r\n    return { path, pathLength, duration };\r\n  });\r\n}\r\n\r\nfunction runAnimations(animations) {\r\n  // Initial conditions\r\n  animations.forEach(function(animation) {\r\n    animation.path.style.transition = \"none\";\r\n    animation.path.style.strokeDasharray = `${animation.pathLength} ${animation.pathLength}`;\r\n    animation.path.style.strokeDashoffset = animation.pathLength;\r\n    animation.path.style.fillOpacity = \"0\";\r\n    animation.path.getBoundingClientRect();\r\n  });\r\n\r\n  // Triggering a reflow so we animate from first path\r\n  animations[0].path.getBoundingClientRect();\r\n\r\n  // Run line animations\r\n  let begin = 0;\r\n  animations.forEach(function(animation) {\r\n    animation.path.style.transition = `stroke-dashoffset ${animation.duration}s ${begin}s ease-in-out, fill-opacity ${animation.duration}s ${begin}s ease-in-out`;\r\n    animation.path.style.strokeDashoffset = \"0\";\r\n    animation.path.style.fillOpacity = \"1.0\";\r\n    begin += animation.duration + 0.1;\r\n  });\r\n}\r\n\r\nexport default LogoDrawself;","import React, { useState } from \"react\";\r\nimport Coffee from \"../../../../static/coffee.inline.svg\";\r\nimport * as style from \"./style.module.css\";\r\n\r\nconst CofeeDashed = () => {\r\n  const [running, setRunning] = useState(false);\r\n  return (\r\n    <Coffee\r\n      className={running ? style.coffeeDashedOn : style.coffeeDashedOff}\r\n      onClick={() => setRunning(prevRunning => !prevRunning)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CofeeDashed;","// extracted by mini-css-extract-plugin\nexport var coffeeDashedOff = \"style-module--coffeeDashedOff--72946\";\nexport var coffeeDashedOn = \"style-module--coffeeDashedOn--24749\";\nexport var pathAnimation = \"style-module--pathAnimation--dfbba\";","import React, { useState } from \"react\";\r\nimport Coffee from \"../../../../static/coffee.inline.svg\";\r\nimport * as style from \"./style.module.css\";\r\n\r\nconst CofeeDrawSelf = () => {\r\n  const [running, setRunning] = useState(false);\r\n  return (\r\n    <Coffee\r\n      className={running ? style.coffeeDrawselfOn : style.coffeeDrawselfOff}\r\n      onClick={() => setRunning(prevRunning => !prevRunning)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CofeeDrawSelf;","// extracted by mini-css-extract-plugin\nexport var coffeeDrawselfOff = \"style-module--coffeeDrawselfOff--93e01\";\nexport var coffeeDrawselfOn = \"style-module--coffeeDrawselfOn--a2dd1\";\nexport var pathAnimation = \"style-module--pathAnimation--7fc44\";","import React, { useLayoutEffect, useRef } from \"react\";\r\nimport Cupcake from \"../../../../static/cupcake.inline.svg\";\r\nimport * as style from \"./style.module.css\";\r\n\r\nconst CupcakeDrawSelf = () => {\r\n  const animations = useRef();\r\n  useLayoutEffect(() => {\r\n    animations.current = createAnimations();\r\n  });\r\n\r\n  return (\r\n    <Cupcake\r\n      id=\"cupcakeDrawSelf\"\r\n      className={style.cupcakeDrawself}\r\n      onClick={() => runAnimations(animations.current)}\r\n    />\r\n  );\r\n};\r\n\r\nfunction createAnimations() {\r\n  const svg = document.querySelector(`#cupcakeDrawSelf`);\r\n  const paths = Array.from(svg.querySelectorAll(\".line\"));\r\n  return paths.map(function(path) {\r\n    const pathLength = path.getTotalLength();\r\n    const duration = Math.pow(pathLength, 0.5) * 0.03;\r\n    return { path, pathLength, duration };\r\n  });\r\n}\r\n\r\nfunction runAnimations(animations) {\r\n  // Initial conditions\r\n  animations.forEach(function(animation) {\r\n    animation.path.style.transition = \"none\"; // Clear previous transition => fast removal\r\n    animation.path.style.strokeDasharray = `${animation.pathLength} ${animation.pathLength}`;\r\n    animation.path.style.strokeDashoffset = animation.pathLength;\r\n    animation.path.getBoundingClientRect(); // Trigger reflow of each path\r\n  });\r\n\r\n  // Triggering a reflow on first path so we animate from here\r\n  animations[0].path.getBoundingClientRect();\r\n\r\n  // Run line animations\r\n  let begin = 0;\r\n  animations.forEach(function(animation) {\r\n    animation.path.style.transition = `stroke-dashoffset ${animation.duration}s ${begin}s ease-in-out`;\r\n    animation.path.style.strokeDashoffset = \"0\";\r\n    begin += animation.duration + 0.1; // Slight 0.1s delay for drawing effect\r\n  });\r\n}\r\n\r\nexport default CupcakeDrawSelf;","// extracted by mini-css-extract-plugin\nexport var cupcakeDrawself = \"style-module--cupcakeDrawself--fa834\";","import React, { useLayoutEffect, useRef } from \"react\";\r\nimport Cupcake from \"../../../../static/cupcake.inline.svg\";\r\nimport * as style from \"./style.module.css\";\r\n\r\nconst CupcakeDrawselfFade = () => {\r\n  const animations = useRef();\r\n  useLayoutEffect(() => {\r\n    animations.current = createAnimations();\r\n  });\r\n  return (\r\n    <Cupcake\r\n      id=\"cupcakeDrawselfFade\"\r\n      className={style.cupcakeDrawselfFade}\r\n      onClick={() => runAnimations(animations.current)}\r\n    />\r\n  );\r\n};\r\n\r\nfunction createAnimations() {\r\n  const svg = document.querySelector(`#cupcakeDrawselfFade`);\r\n  const lines = Array.from(svg.querySelectorAll(\".line\"));\r\n  const shades = Array.from(svg.querySelectorAll(\".shade\"));\r\n  var paths = [...lines, ...shades];\r\n  return paths.map(function(path) {\r\n    var pathLength = path.getTotalLength();\r\n    var duration = Math.pow(pathLength, 0.5) * 0.03;\r\n    return { path, pathLength, duration };\r\n  });\r\n}\r\n\r\nfunction runAnimations(animations) {\r\n  // Initial conditions\r\n  animations.forEach(function(animation) {\r\n    animation.path.style.transition = \"none\"; // Clear previous transition => fast removal\r\n    animation.path.style.strokeDasharray = `${animation.pathLength} ${animation.pathLength}`;\r\n    animation.path.style.strokeDashoffset = animation.pathLength;\r\n    animation.path.style.fillOpacity = \"0\";\r\n    animation.path.getBoundingClientRect(); // Trigger reflow of each path\r\n  });\r\n\r\n  // Triggering a reflow on first path so we animate from here\r\n  animations[0].path.getBoundingClientRect();\r\n\r\n  // Run line animations\r\n  let begin = 0;\r\n  animations.forEach(function(animation) {\r\n    animation.path.style.transition = `stroke-dashoffset ${animation.duration}s ${begin}s ease-in-out, fill-opacity ${animation.duration}s ${begin}s ease-in-out`;\r\n    animation.path.style.strokeDashoffset = \"0\";\r\n    animation.path.style.fillOpacity = \"1.0\";\r\n    begin += animation.duration + 0.1; // Slight 0.1s delay for drawing effect\r\n  });\r\n}\r\n\r\nexport default CupcakeDrawselfFade;","// extracted by mini-css-extract-plugin\nexport var cupcakeDrawselfFade = \"style-module--cupcakeDrawselfFade--89019\";","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport LogoDrawself from \"../../../components/posts/logoDrawself/logoDrawself\";\nimport Coffee from \"../../../../static/coffee.inline.svg\";\nimport CoffeeDashed from \"../../../components/posts/coffeeDashed/coffeeDashed\";\nimport CoffeeDrawself from \"../../../components/posts/coffeeDrawself/coffeeDrawself\";\nimport CupcakeDrawself from \"../../../components/posts/cupcakeDrawself/cupcakeDrawself\";\nimport CupcakeDrawselfFade from \"../../../components/posts/cupcakeDrawselfFade/cupcakeDrawselfFade\";\nimport * as commonStyle from \"../common.module.css\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    pre: \"pre\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(LogoDrawself), \"\\n\", React.createElement(_components.p, null, \"Hey that animation was pretty cool, right? Just click on him again to re-run it. Today's post is on how to create awesome SVG line animations like the one above.\"), \"\\n\", React.createElement(_components.h2, null, \"SVG Paths\"), \"\\n\", React.createElement(_components.p, null, \"The SVG path format can seem rather cryptic:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-xml\"\n  }, \"<svg id=\\\"coffee\\\" class=\\\"coffee\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"250\\\" height=\\\"375\\\" viewBox=\\\"0 0 250 375\\\">\\r\\n    <path style=\\\"fill:none;stroke:#000000;stroke-width:5;\\\"\\r\\n        d=\\\"m 19.892717,176.8917 1.190429,139.87515 c 3.078475,25.1789 11.076205,36.7905 41.069744,43.45065 21.81719,4.35025 40.50001,2.4318 60.11656,2.38085 29.56052,-2.41735 45.03841,-16.4321 47.61711,-41.06975 4.77735,-29.65355 -2.57891,-63.04595 2.3117,-95.7242 2.34095,-4.81735 1.6138,-10.7567 11.3782,-12.6047 4.893,-0.9099 8.9718,-0.73415 12.60465,0.035 7.01395,2.64455 11.4282,6.27795 13.7335,12.4634 2.27135,9.325 1.9101,18.65 1.04165,27.97505 -0.6871,6.0357 -2.34285,11.2697 -4.6129,15.32675 -5.56075,6.92775 -13.47125,11.10545 -19.3264,17.11985 -1.76685,2.77765 -1.1949,6.44065 -1.05965,9.21835 0.5008,3.07045 2.91735,4.2252 5.3569,5.3569 3.42525,0.73005 6.89725,1.2265 10.71385,0 7.5242,-2.499 12.99665,-7.5627 19.0468,-11.90425 4.9011,-5.3231 8.77275,-12.36185 12.4995,-19.64205 3.12195,-6.4744 3.27535,-14.4331 4.1665,-22.0229 -0.119,-7.5046 -0.4315,-14.9127 -1.33925,-22.02295 -4.8731,-19.68355 -18.54195,-35.8845 -38.54005,-39.28405 -5.1125,-0.42 -11.90225,0.1125 -20.622,-1.12135 -5.4145,-2.00515 -6.06795,-5.30365 -6.1265,-8.78685 0.78285,-7.14255 -0.6129,-14.4956 -4.20258,-21.63815 -6.66151,-9.72085 -18.17041,-13.45375 -31.54633,-14.88035 -22.53748,-3.28225 -43.72335,-3.05035 -64.28306,-1.1904 -9.30141,0.7866 -18.504954,1.1328 -28.570254,5.3569 -2.97607,1.27915 -5.95214,2.72185 -8.9282,5.95215 -1.224895,4.1665 -1.133765,8.333 2.38085,12.4995 7.77138,5.5689 15.83991,9.5035 24.403764,10.71385 15.9467,2.91015 32.12713,5.0412 49.25393,4.01765 13.53319,-1.55345 27.199,-2.84165 37.64724,-10.565 7.41696,-3.9148 9.57699,-9.80095 10.71385,-16.0708 -1.1491,-6.68715 -2.97648,-13.34485 -13.0947,-19.64205 -10.03057,-6.67185 -20.92652,-10.1706 -32.14153,-12.4995 -17.96892,-2.87915 -35.80275,-1.9664 -52.974,-4.46395 -16.962344,-2.0638 -17.978594,-7.64395 -17.558814,-14.582746 -1.55086,-4.59945 7.83395,-12.36765 13.68992,-12.2019 10.898904,-1.20005 22.995044,-2.5708 38.986494,-1.488 10.18657,2.1145 20.57079,4.03135 31.54631,5.3569 19.23428,-1.2312 23.56941,-6.5704 24.40375,-12.4995 0.76904,-5.48375 0.84257,-11.20525 -4.16649,-17.856405 -3.3469,-3.83015 -8.16664,-6.482 -15.47555,-7.14255 -25.80935,-0.76405 -51.29432,5.6476 -79.758614,5.95215 -18.34454,-0.4225 -32.777509,-4.74995 -38.837699,-15.4756 -0.686105,-6.3489 -1.214195,-12.99545 7.737779,-19.3444 7.163605,-5.637 17.07073,-10.58535 28.9326,-12.3071\\\"\\r\\n    />\\r\\n</svg>\\n\")), \"\\n\", React.createElement(_components.p, null, \"In reality nobody sane edits path elements by hand, and the best way to change them is with the use of an SVG editor like \", React.createElement(\"a\", {\n    class: \"blueLink\",\n    href: \"https://inkscape.org/\"\n  }, \"Inkscape\"), \". I create my SVGs in Inkscape then cut out the \\\"bloat elements\\\" Inkscape adds that aren't needed.\"), \"\\n\", React.createElement(_components.h2, null, \"Single Path Animations\"), \"\\n\", React.createElement(_components.p, null, \"We'll start with a simple single path SVG:\"), \"\\n\", React.createElement(\"div\", {\n    className: commonStyle.halfWidthContainer\n  }, React.createElement(\"div\", {\n    className: commonStyle.halfWidthLeft\n  }, React.createElement(Coffee)), React.createElement(\"div\", {\n    className: commonStyle.halfWidthRight\n  }, React.createElement(CoffeeDashed))), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-css\"\n  }, \".coffee-dashed path {\\r\\n  stroke-dasharray: 20 20;\\r\\n  stroke-dashoffset: 1547;\\r\\n  animation: coffee-dash 20s linear infinite;\\r\\n}\\r\\n@keyframes coffee-dash {\\r\\n  100% {\\r\\n    stroke-dashoffset: 0;\\r\\n  }\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"We can add dashes to an SVG path with the use of the \", React.createElement(_components.code, null, \"stroke-dasharray\"), \" property, the first number gives the length of the dashes and the second gives the length of the gaps. The \", React.createElement(_components.code, null, \"stroke-dashoffset\"), \" property specifies where the dasharray starts. By changing the \", React.createElement(_components.code, null, \"stroke-dashoffset\"), \" from the path length to 0 using a \", React.createElement(_components.code, null, \"@keyframes\"), \" animation we can move the dashes about (try clicking on the dashed mug).\"), \"\\n\", React.createElement(_components.p, null, \"Now imagine we made the dashes and gaps the length of the path, such that we only ever see one dash. To do this we increase the \", React.createElement(_components.code, null, \"stroke-dasharray\"), \" values to the path length and we've got a coffee mug that draws itself:\"), \"\\n\", React.createElement(CoffeeDrawself), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-css\"\n  }, \".coffee-drawself path {\\r\\n  stroke-dasharray: 1547 1547;\\r\\n  stroke-dashoffset: 1547;\\r\\n  animation: draw 15s linear infinite;\\r\\n}\\r\\n@keyframes draw {\\r\\n  0% {\\r\\n    stroke-dashoffset: 1547;\\r\\n  }\\r\\n  75%,\\r\\n  100% {\\r\\n    stroke-dashoffset: 0; /* Pause for 75%-100% of animation */\\r\\n  }\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"But wait, how do you know the path length? It turns out there is a handy JavaScript method \", React.createElement(_components.code, null, \"getTotalLength\"), \" that does this for you:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"var path = document.querySelector(\\\".coffee-drawself path\\\");\\r\\nvar length = path.getTotalLength(); // 1546.7664794921875\\n\")), \"\\n\", React.createElement(_components.h2, null, \"Multi-path Animations\"), \"\\n\", React.createElement(_components.p, null, \"To do multi-path animations we can reproduce what we did for single line animations in JavaScript, then repeat that over all the paths in the SVG. Try clicking on this cupcake:\"), \"\\n\", React.createElement(CupcakeDrawself), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"var cupcake = document.querySelector(\\\"#cupcakeDrawSelf\\\");\\r\\nvar cupcakePaths = Array.from(cupcake.querySelectorAll(\\\"path\\\"));\\r\\nvar cupcakeAnimations = cupcakePaths.map(function(path) {\\r\\n  var pathLength = path.getTotalLength();\\r\\n  var duration = Math.pow(pathLength, 0.5) * 0.03;\\r\\n  return { path, pathLength, duration };\\r\\n});\\r\\n\\r\\nfunction runCupcakeAnimations() {\\r\\n  // Initial conditions\\r\\n  cupcakeAnimations.forEach(function(animation) {\\r\\n    animation.path.style.transition = \\\"none\\\"; // Clear previous transition => fast removal\\r\\n    animation.path.style.strokeDasharray = `${animation.pathLength} ${animation.pathLength}`;\\r\\n    animation.path.style.strokeDashoffset = animation.pathLength;\\r\\n    animation.path.getBoundingClientRect(); // Trigger reflow of each path\\r\\n  });\\r\\n\\r\\n  // Triggering a reflow on first path so we animate from here\\r\\n  cupcakeAnimations[0].path.getBoundingClientRect();\\r\\n\\r\\n  // Run line animations\\r\\n  var begin = 0;\\r\\n  cupcakeAnimations.forEach(function(animation) {\\r\\n    animation.path.style.transition = `stroke-dashoffset ${animation.duration}s ${begin}s ease-in-out`;\\r\\n    animation.path.style.strokeDashoffset = \\\"0\\\";\\r\\n    begin += animation.duration + 0.1; // Slight 0.1s delay for drawing effect\\r\\n  });\\r\\n}\\r\\n\\r\\ncupcake.addEventListener(\\\"click\\\", runCupcakeAnimations);\\n\")), \"\\n\", React.createElement(_components.p, null, \"Finally if you want to make things really snazzy you can add fade effects by varying \", React.createElement(_components.code, null, \"fill-opacity\"), \" and adding path class names to differentiate between lines and shade:\"), \"\\n\", React.createElement(CupcakeDrawselfFade), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"var cupcakeFade = document.querySelector(\\\"#cupcakeDrawselfFade\\\");\\r\\nvar cupcakeLines = Array.from(cupcakeFade.querySelectorAll(\\\".line\\\"));\\r\\nvar cupcakeShades = Array.from(cupcakeFade.querySelectorAll(\\\".shade\\\"));\\r\\nvar cupcakeFadePaths = [...cupcakeLines, ...cupcakeShades]; // Run shades last.\\r\\n\\r\\nvar cupcakeFadeAnimations = cupcakeFadePaths.map(function(path) {\\r\\n  var pathLength = path.getTotalLength();\\r\\n  var duration = Math.pow(pathLength, 0.5) * 0.03;\\r\\n  return { path, pathLength, duration };\\r\\n});\\r\\n\\r\\nfunction runCupcakeFadeAnimations() {\\r\\n  // Initial conditions\\r\\n  cupcakeFadeAnimations.forEach(function(animation) {\\r\\n    animation.path.style.transition = \\\"none\\\"; // Clear previous transition => fast removal\\r\\n    animation.path.style.strokeDasharray = `${animation.pathLength} ${animation.pathLength}`;\\r\\n    animation.path.style.strokeDashoffset = animation.pathLength;\\r\\n    animation.path.style.fillOpacity = \\\"0\\\";\\r\\n    animation.path.getBoundingClientRect(); // Trigger reflow of each path\\r\\n  });\\r\\n\\r\\n  // Triggering a reflow on first path so we animate from here\\r\\n  cupcakeFadeAnimations[0].path.getBoundingClientRect();\\r\\n\\r\\n  // Run line animations\\r\\n  var begin = 0;\\r\\n  cupcakeFadeAnimations.forEach(function(animation) {\\r\\n    animation.path.style.transition = `stroke-dashoffset ${animation.duration}s ${begin}s ease-in-out, fill-opacity ${animation.duration}s ${begin}s ease-in-out`;\\r\\n    animation.path.style.strokeDashoffset = \\\"0\\\";\\r\\n    animation.path.style.fillOpacity = \\\"1.0\\\";\\r\\n    begin += animation.duration + 0.1; // Slight 0.1s delay for drawing effect\\r\\n  });\\r\\n}\\r\\n\\r\\ncupcakeFade.addEventListener(\\\"click\\\", runCupcakeFadeAnimations);\\n\")), \"\\n\", React.createElement(_components.p, null, \"As always the full code for all these animations is on my \", React.createElement(\"a\", {\n    href: \"https://github.com/george-pearson\",\n    class: \"blueLink\"\n  }, \"GitHub\"), \".\"), \"\\n\", React.createElement(_components.h2, null, \"Further reading\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(\"a\", {\n    class: \"blueLink\",\n    href: \"https://jakearchibald.com/2013/animated-line-drawing-svg/\"\n  }, \"Jake Archibald's blog post on this in 2013!\"), \"\\n\"), \"\\n\", React.createElement(_components.li, null, \"\\n\", React.createElement(\"a\", {\n    class: \"blueLink\",\n    href: \"https://css-tricks.com/svg-line-animation-works/\"\n  }, \"CSS-Tricks on SVG line animation\"), \"\\n\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","// extracted by mini-css-extract-plugin\nexport var halfWidthContainer = \"common-module--halfWidthContainer--10282\";\nexport var halfWidthLeft = \"common-module--halfWidthLeft--83707\";\nexport var halfWidthRight = \"common-module--halfWidthRight--3851a\";","var React = require('react');\n\nfunction CoffeeInline (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"style\":{\"fill\":\"none\",\"stroke\":\"#000000\",\"strokeWidth\":\"5\"},\"d\":\"m 19.892717,176.8917 1.190429,139.87515 c 3.078475,25.1789 11.076205,36.7905 41.069744,43.45065 21.81719,4.35025 40.50001,2.4318 60.11656,2.38085 29.56052,-2.41735 45.03841,-16.4321 47.61711,-41.06975 4.77735,-29.65355 -2.57891,-63.04595 2.3117,-95.7242 2.34095,-4.81735 1.6138,-10.7567 11.3782,-12.6047 4.893,-0.9099 8.9718,-0.73415 12.60465,0.035 7.01395,2.64455 11.4282,6.27795 13.7335,12.4634 2.27135,9.325 1.9101,18.65 1.04165,27.97505 -0.6871,6.0357 -2.34285,11.2697 -4.6129,15.32675 -5.56075,6.92775 -13.47125,11.10545 -19.3264,17.11985 -1.76685,2.77765 -1.1949,6.44065 -1.05965,9.21835 0.5008,3.07045 2.91735,4.2252 5.3569,5.3569 3.42525,0.73005 6.89725,1.2265 10.71385,0 7.5242,-2.499 12.99665,-7.5627 19.0468,-11.90425 4.9011,-5.3231 8.77275,-12.36185 12.4995,-19.64205 3.12195,-6.4744 3.27535,-14.4331 4.1665,-22.0229 -0.119,-7.5046 -0.4315,-14.9127 -1.33925,-22.02295 -4.8731,-19.68355 -18.54195,-35.8845 -38.54005,-39.28405 -5.1125,-0.42 -11.90225,0.1125 -20.622,-1.12135 -5.4145,-2.00515 -6.06795,-5.30365 -6.1265,-8.78685 0.78285,-7.14255 -0.6129,-14.4956 -4.20258,-21.63815 -6.66151,-9.72085 -18.17041,-13.45375 -31.54633,-14.88035 -22.53748,-3.28225 -43.72335,-3.05035 -64.28306,-1.1904 -9.30141,0.7866 -18.504954,1.1328 -28.570254,5.3569 -2.97607,1.27915 -5.95214,2.72185 -8.9282,5.95215 -1.224895,4.1665 -1.133765,8.333 2.38085,12.4995 7.77138,5.5689 15.83991,9.5035 24.403764,10.71385 15.9467,2.91015 32.12713,5.0412 49.25393,4.01765 13.53319,-1.55345 27.199,-2.84165 37.64724,-10.565 7.41696,-3.9148 9.57699,-9.80095 10.71385,-16.0708 -1.1491,-6.68715 -2.97648,-13.34485 -13.0947,-19.64205 -10.03057,-6.67185 -20.92652,-10.1706 -32.14153,-12.4995 -17.96892,-2.87915 -35.80275,-1.9664 -52.974,-4.46395 -16.962344,-2.0638 -17.978594,-7.64395 -17.558814,-14.582746 -1.55086,-4.59945 7.83395,-12.36765 13.68992,-12.2019 10.898904,-1.20005 22.995044,-2.5708 38.986494,-1.488 10.18657,2.1145 20.57079,4.03135 31.54631,5.3569 19.23428,-1.2312 23.56941,-6.5704 24.40375,-12.4995 0.76904,-5.48375 0.84257,-11.20525 -4.16649,-17.856405 -3.3469,-3.83015 -8.16664,-6.482 -15.47555,-7.14255 -25.80935,-0.76405 -51.29432,5.6476 -79.758614,5.95215 -18.34454,-0.4225 -32.777509,-4.74995 -38.837699,-15.4756 -0.686105,-6.3489 -1.214195,-12.99545 7.737779,-19.3444 7.163605,-5.637 17.07073,-10.58535 28.9326,-12.3071\"}));\n}\n\nCoffeeInline.defaultProps = {\"width\":\"250\",\"height\":\"375\",\"viewBox\":\"0 0 250 375\"};\n\nmodule.exports = CoffeeInline;\n\nCoffeeInline.default = CoffeeInline;\n","var React = require('react');\n\nfunction CupcakeInline (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"path\",{\"className\":\"shade\",\"style\":{\"fill\":\"#f7e6c4\",\"fillOpacity\":\"1\"},\"d\":\"M 39.062991,231.37874 18.305927,142.30586 c -0.2475,-1.91925 1.253437,-5.62831 6.135625,-5.52562 l 196.614558,-0.3475 c 9.52819,-0.36875 11.33825,3.89356 10.48475,9.75393 l -20.02625,83.42032 c -1.3895,7.466 -5.50068,11.43275 -12.40237,11.81175 H 52.055931 c -10.71863,0.455 -11.05069,-4.5555 -12.99294,-10.03994 z\",\"key\":0}),React.createElement(\"path\",{\"className\":\"shade\",\"style\":{\"fill\":\"#ee65a4\",\"fillOpacity\":\"1\"},\"d\":\"M 24.888864,136.58936 C 22.165239,124.8283 24.815734,113.31155 39.358301,102.3353 32.218181,84.05105 25.946861,65.91155 51.169991,53.02118 68.707801,31.32399 83.147491,6.2081747 122.63118,8.7271127 c 7.44662,0.431875 3.40325,7.2600623 3.40325,7.2600623 -8.29732,11.464005 -5.74994,21.503685 10.28462,29.043185 7.95788,3.72542 76.21159,9.48379 71.06144,57.00963 8.72581,3.0545 15.37144,9.85343 12.40237,33.95881\",\"key\":1}),React.createElement(\"path\",{\"className\":\"line\",\"style\":{\"fill\":\"none\",\"stroke\":\"#000000\",\"strokeWidth\":\"6.25\"},\"d\":\"M 24.888864,136.58936 C 22.165239,124.8283 24.815734,113.31155 39.358301,102.3353 32.218181,84.05105 25.946861,65.91155 51.169991,53.02118 68.707801,31.32399 83.147491,6.2081747 122.63118,8.7271127 c 7.44662,0.431875 3.40325,7.2600623 3.40325,7.2600623 -8.29732,11.464005 -5.74994,21.503685 10.28462,29.043185 7.95788,3.72542 76.21159,9.48379 71.06144,57.00963 8.72581,3.0545 15.37144,9.85343 12.40237,33.95881\",\"key\":2}),React.createElement(\"path\",{\"className\":\"line\",\"style\":{\"fill\":\"none\",\"stroke\":\"#000000\",\"strokeWidth\":\"6.25\"},\"d\":\"M 39.062991,231.37874 18.305927,142.30586 c -0.2475,-1.91925 1.253437,-5.62831 6.135625,-5.52562 l 196.614558,-0.3475 c 9.52819,-0.36875 11.33825,3.89356 10.48475,9.75393 l -20.02625,83.42032 c -1.3895,7.466 -5.50068,11.43275 -12.40237,11.81175 H 52.055931 c -10.71863,0.455 -11.05069,-4.5555 -12.99294,-10.03994 z\",\"key\":3}),React.createElement(\"path\",{\"className\":\"line\",\"style\":{\"fill\":\"none\",\"stroke\":\"#000000\",\"strokeWidth\":\"6.25\"},\"d\":\"M 51.169991,53.02118 C 97.879551,88.79786 151.54143,94.44186 207.38049,102.03999\",\"key\":4}),React.createElement(\"path\",{\"className\":\"line\",\"style\":{\"fill\":\"none\",\"stroke\":\"#000000\",\"strokeWidth\":\"6.25\"},\"d\":\"M 81.880611,136.58936 C 67.256301,126.97205 52.463551,118.02849 39.358301,102.3353\",\"key\":5}),React.createElement(\"path\",{\"className\":\"line\",\"style\":{\"fill\":\"none\",\"stroke\":\"#000000\",\"strokeWidth\":\"6.25\"},\"d\":\"M 68.592361,241.12342 57.666491,135.9988\",\"key\":6}),React.createElement(\"path\",{\"className\":\"line\",\"style\":{\"fill\":\"none\",\"stroke\":\"#000000\",\"strokeWidth\":\"6.25\"},\"d\":\"M 105.79943,241.12342 101.96055,136.58936\",\"key\":7}),React.createElement(\"path\",{\"className\":\"line\",\"style\":{\"fill\":\"none\",\"stroke\":\"#000000\",\"strokeWidth\":\"6.25\"},\"d\":\"m 143.8923,241.41874 3.54356,-104.53407\",\"key\":8}),React.createElement(\"path\",{\"className\":\"line\",\"style\":{\"fill\":\"none\",\"stroke\":\"#000000\",\"strokeWidth\":\"6.25\"},\"d\":\"M 180.50874,241.12342 192.91111,136.58936\",\"key\":9})]);\n}\n\nCupcakeInline.defaultProps = {\"width\":\"250\",\"height\":\"250\",\"viewBox\":\"0 0 250 250\"};\n\nmodule.exports = CupcakeInline;\n\nCupcakeInline.default = CupcakeInline;\n"],"names":["logoDrawself","runAnimations","animations","forEach","animation","path","style","transition","strokeDasharray","pathLength","strokeDashoffset","fillOpacity","getBoundingClientRect","begin","duration","LogoDrawself","useRef","useLayoutEffect","current","svg","document","querySelector","lines","Array","from","querySelectorAll","shade","concat","map","getTotalLength","Math","pow","createAnimations","React","Logo","className","onClick","CofeeDashed","running","setRunning","useState","Coffee","prevRunning","CofeeDrawSelf","CupcakeDrawSelf","Cupcake","id","CupcakeDrawselfFade","shades","_createMdxContent","props","_components","Object","assign","p","h2","pre","code","ul","li","_provideComponents","components","class","href","commonStyle","CoffeeDashed","CoffeeDrawself","CupcakeDrawself","wrapper","MDXLayout","halfWidthContainer","halfWidthLeft","halfWidthRight","CoffeeInline","createElement","defaultProps","module","exports","default","CupcakeInline"],"sourceRoot":""}