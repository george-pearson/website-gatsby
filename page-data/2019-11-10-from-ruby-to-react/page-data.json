{"componentChunkName":"component---src-templates-post-template-post-template-js","path":"/2019-11-10-from-ruby-to-react/","result":{"data":{"mdx":{"id":"4ba0c2cf-6475-5e56-9bb2-2fe8626f5783","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"From Ruby to React\",\n  \"subtitle\": \"My experience migrating from Jekyll to Gatsby.\",\n  \"date\": \"2019-11-10\",\n  \"image\": \"/reactLogo.png\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"I recently migrated my blog from one static site generator, \", mdx(\"a\", {\n    className: \"blueLink\",\n    href: \"https://jekyllrb.com/\"\n  }, \"Jekyll\"), \",\\nto another, \", mdx(\"a\", {\n    className: \"blueLink\",\n    href: \"https://www.gatsbyjs.org/\"\n  }, \"Gatsby\"), \".\\nA static site generator is a tool that allows you to generate static HTML from templates\\nwhich can then easily be served up to clients making a simple website. Here are a few\\nreasons I did this:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Jekyll runs using \", mdx(\"a\", {\n    className: \"blueLink\",\n    href: \"https://www.ruby-lang.org/en/\"\n  }, \"Ruby\"), \", which is pretty old\\nand \", mdx(\"a\", {\n    className: \"blueLink\",\n    href: \"https://insights.stackoverflow.com/survey/2019#technology-_-programming-scripting-and-markup-languages\"\n  }, \"not that popular\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Gatsby runs using \", mdx(\"a\", {\n    className: \"blueLink\",\n    href: \"https://nodejs.org/\"\n  }, \"Node\"), \" which is more modern and well supported.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Gatsby uses \", mdx(\"a\", {\n    className: \"blueLink\",\n    href: \"https://reactjs.org/\"\n  }, \"React\"), \" a popular UI framework I wanted to learn.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Gatsby has many easy to use plugins that are available on \", mdx(\"a\", {\n    className: \"blueLink\",\n    href: \"https://www.npmjs.com/\"\n  }, \"npm\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Gatsby uses \", mdx(\"a\", {\n    className: \"blueLink\",\n    href: \"https://webpack.js.org/\"\n  }, \"webpack\"), \" an\\neasy to use build tool which doesn't require build scripts (I was using \", mdx(\"a\", {\n    className: \"blueLink\",\n    href: \"https://gulpjs.com/\"\n  }, \"Gulp\"), \" previously).\")), mdx(\"h2\", null, \"Initial setup\"), mdx(\"p\", null, \"One of the immediate benefits I found was how easy it is to get Gatsby up and\\nrunning compared to Jekyll (webpack is great!).\\nAdditionally \", mdx(\"a\", {\n    className: \"blueLink\",\n    href: \"https://webpack.js.org/guides/code-splitting/\"\n  }, \"Code Splitting\"), \" allowed\\nme to simplify my old sites \", mdx(\"a\", {\n    className: \"blueLink\",\n    href: \"https://sass-lang.com/\"\n  }, \"Sass\"), \" into\\nsmaller chunks of plain old CSS.\"), mdx(\"h2\", null, \"Offline support\"), mdx(\"div\", {\n    className: commonStyle.halfWidthContainer\n  }, mdx(\"div\", {\n    className: commonStyle.halfWidthLeft\n  }, mdx(\"img\", {\n    style: {\n      marginTop: '20px'\n    },\n    height: \"320px\",\n    width: \"180px\",\n    src: offlineApp,\n    alt: \"offlineApp\"\n  })), mdx(\"div\", {\n    className: commonStyle.halfWidthRight\n  }, mdx(\"p\", null, \"Adding offline support was super easy! There are just two simple \", mdx(\"a\", {\n    className: \"blueLink\",\n    href: \"https://www.gatsbyjs.org/docs/add-offline-support-with-a-service-worker/\"\n  }, \"Gatsby plugins\"), \" to install and you're away. This allows users to download your site content as an application which can be viewed offline. Try it out on mobile - its pretty cool! \\uD83D\\uDE03\"))), mdx(\"h2\", null, \"React and MDX\"), mdx(\"p\", null, \"I wanted to convert the various JavaScript tools I made in previous blog posts into reusable\\nReact \", mdx(\"a\", {\n    className: \"blueLink\",\n    href: \"https://reactjs.org/docs/react-component.html\"\n  }, \"components\"), \", written\\nin JSX (the React template language). To add these components to my markdown posts I\\nused \", mdx(\"a\", {\n    className: \"blueLink\",\n    href: \"https://mdxjs.com/\"\n  }, \"MDX\"), \" a markdown extension format that includes\\nJSX. This worked relatively well and I was able to refactor all of my JavaScript code to React,\\nlearning lots of React concepts!\"), mdx(\"h2\", null, \"Other stuff\"), mdx(\"p\", null, \"As well as the migration I also:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Added a slide bar for mobile devices making the mobile experience a lot nicer.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Simplified all SVGs and used \", mdx(\"a\", {\n    className: \"blueLink\",\n    href: \"https://github.com/jacobmischka/gatsby-plugin-react-svg\"\n  }, \"gatsby-plugin-react-svg\"), \" to\\nadd them into JSX easily.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Improved the home page paginator to have page numbers, rather than just a \\\"Next Page\\\" button.\")), mdx(\"h2\", null, \"All still on GitHub\"), mdx(\"p\", null, \"Finally all of my website code is still hosted on \", mdx(\"a\", {\n    className: \"blueLink\",\n    href: \"https://pages.github.com/\"\n  }, \"GitHub pages\"), \", free for anyone to look at!\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"slug":"/2019-11-10-from-ruby-to-react/"},"frontmatter":{"title":"From Ruby to React","date":"November 10, 2019","subtitle":"My experience migrating from Jekyll to Gatsby.","image":"/reactLogo.png"}}},"pageContext":{"slug":"/2019-11-10-from-ruby-to-react/","previous":{"fields":{"slug":"/2019-08-11-moire-patterns/"},"frontmatter":{"title":"Moir√© Patterns"}},"next":null}},"staticQueryHashes":["4175673927"]}