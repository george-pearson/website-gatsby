{"version":3,"file":"component---src-pages-posts-2019-05-19-sobel-index-mdx-1c614c2a77689ce1fbeb.js","mappings":"gRAUaA,EAAe,CAC1B,MAAS,uBACT,SAAY,mEACZ,KAAQ,aACR,MAAS,oBAELC,EAAc,CAClBD,gBAGa,SAASE,EAAW,GAGhC,IAHgC,WACjCC,GAED,EADIC,GAAK,YAER,OAAO,SALS,UAKC,iBAAKH,EAAiBG,EAAK,CAAED,WAAYA,EAAYE,QAAQ,eAE5E,kBAAK,yBAAuB,cAAGC,UAAU,WAAWC,KAAK,gCAAiC,+BAAmC,iGAA+F,cAAGA,KAAK,+CAA+CD,UAAU,YAAa,mBAAuB,uPACjU,kBAAK,gDAA8C,cAAGC,KAAK,0CAA0CD,UAAU,YAAa,aAAiB,sEAC7I,qBAAK,iBAAME,WAAW,MAClB,UAAa,uBACV,m7BA6BP,SAAC,IAAW,CAACC,cAAc,YAAYJ,QAAQ,iBAC/C,kBAAK,+CAA6C,cAAGC,UAAU,WAAWC,KAAK,uEAAwE,YAAgB,4BAA0B,cAAGD,UAAU,WAAWC,KAAK,2DAA4D,WAAe,MAAI,uBAAYC,WAAW,KAAM,MAAmB,SAAO,uBAAYA,WAAW,KAAM,MAAmB,8GAA4G,uBAAYA,WAAW,KAAM,MAAmB,iIAA+H,uBAAYA,WAAW,KAAM,MAAmB,qEAAmE,uBAAYA,WAAW,KAAM,MAAmB,SAAO,uBAAYA,WAAW,KAAM,MAAmB,4HACz4B,qBAAK,iBAAMA,WAAW,MAClB,UAAa,uBACV,sKAIP,kBAAK,wEAAsE,uBAAYA,WAAW,KAAM,yBAAsC,6JAC9I,SAAC,IAAW,CAACC,cAAc,QAAQJ,QAAQ,iBAC3C,gBAAKC,UAAWI,EAAAA,YAAmBC,IAAKC,EAAAA,EAAaC,IAAI,kBACzD,kBAAK,8GAA4G,uBAAYL,WAAW,KAAM,mBAAgC,0HAC9K,SAAC,IAAW,CAACC,cAAc,cAAcJ,QAAQ,iBACjD,kBAAK,gGACL,kBAAK,4OACL,SAAC,IAAS,CAACA,QAAQ,eACnB,mBAAM,+BACN,oBACE,eAAIG,WAAW,OACb,cAAGF,UAAU,WAAWC,KAAK,gCAA+B,wDAE9D,eAAIC,WAAW,OACb,cAAGF,UAAU,WAAWC,KAAK,gEAA+D,+BAKpG,CAEAL,EAAWY,gBAAiB,C,uBCvFb,SAASC,EAAyBC,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,CAAC,EAC5B,IACIE,EAAKC,EADLC,ECHS,SAAuCJ,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,CAAC,EAC5B,IAEIE,EAAKC,EAFLC,EAAS,CAAC,EACVC,EAAaC,OAAOC,KAAKP,GAE7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAEvB,OAAOE,CACT,CDRe,CAA6BJ,EAAQC,GAElD,GAAIK,OAAOI,sBAAuB,CAChC,IAAIC,EAAmBL,OAAOI,sBAAsBV,GACpD,IAAKG,EAAI,EAAGA,EAAIQ,EAAiBH,OAAQL,IACvCD,EAAMS,EAAiBR,GACnBF,EAASQ,QAAQP,IAAQ,GACxBI,OAAOM,UAAUC,qBAAqBC,KAAKd,EAAQE,KACxDE,EAAOF,GAAOF,EAAOE,GAEzB,CACA,OAAOE,CACT,C","sources":["webpack://blog/./src/pages/posts/2019-05-19-sobel/index.mdx","webpack://blog/./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack://blog/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport FlowerSobel from \"../../../components/posts/sobel/sobelFlower/sobelFlower\";\nimport SobelTool from \"../../../components/posts/sobel/sobelTool/sobelTool\";\nimport colourWheel from \"../../../../static/colourWheel.png\";\nimport * as style from \"./style.module.css\";\nimport * as commonStyle from \"../common.module.css\";\nexport const _frontmatter = {\n  \"title\": \"Sobel Edge Detection\",\n  \"subtitle\": \"A look at Sobel edge detection using HTML canvas and JavaScript.\",\n  \"date\": \"2019-05-19\",\n  \"image\": \"/sobelFlower.png\"\n};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`I recently watched a `}<a className=\"blueLink\" href=\"https://youtu.be/uihBwtPIBxM\">{`Computerphile YouTube video`}</a>{` about Sobel edge detection and thought I'd write a post about it. In Sobel edge detection a `}<a href=\"https://en.wikipedia.org/wiki/Sobel_operator\" className=\"blueLink\">{`Sobel operation`}</a>{` is applied to an image in order to detect shapes/edges in the image. The main application of edge detection is in robotic vision, for example allowing self-driving vehicles to detect motorway lanes, but it can be used for any image analysis.`}</p>\n    <p>{`The first step in the Sobel operation is to `}<a href=\"https://en.wikipedia.org/wiki/Grayscale\" className=\"blueLink\">{`greyscale`}</a>{` the image. This can be done with a few lines of JavaScript code:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`var gsFigure = document.querySelector(\"#fig-greyscale\");\nvar gsImage = gsFigure.querySelector(\"img\");\nvar gsCanvas = gsFigure.querySelector(\"canvas\");\nvar gsbutton = gsFigure.querySelector(\".button\");\nvar gsCtx = gsCanvas.getContext(\"2d\");\n\ngsbutton.addEventListener(\"click\", () => {\n  gsCanvas.width = gsImage.width;\n  gsCanvas.height = gsImage.height;\n  gsCtx.drawImage(gsImage, 0, 0);\n  var gsImageData = gsCtx.getImageData(0, 0, gsCanvas.width, gsCanvas.height);\n  var id = greyScale(gsImageData);\n  gsCtx.putImageData(id, 0, 0);\n}\n\nfunction greyScale (imageData) {\n  var d = imageData.data;\n  for (var i=0; i<d.length; i+=4) {\n    var r = d[i];\n    var g = d[i+1];\n    var b = d[i+2];\n    // CIE luminance for RGB\n    // Human vision is most sensitive to green, so this has the greatest coefficient value.\n    var v = 0.2126*r + 0.7152*g + 0.0722*b;\n    d[i] = d[i+1] = d[i+2] = v\n  }\n  return imageData;\n};\n`}</code></pre>\n    <FlowerSobel transformType=\"greyscale\" mdxType=\"FlowerSobel\" />\n    <p>{`The next step in the Sobel operation is to `}<a className=\"blueLink\" href=\"https://en.wikipedia.org/wiki/Kernel_(image_processing)#Convolution\">{`convolve`}</a>{` the image with two 3x3 `}<a className=\"blueLink\" href=\"https://en.wikipedia.org/wiki/Kernel_(image_processing)\">{`kernels`}</a>{`, `}<inlineCode parentName=\"p\">{`Gx`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Gy`}</inlineCode>{`. What this basically means is the strength of each pixel is weighted by its neighbours. The magnitude of `}<inlineCode parentName=\"p\">{`Gx`}</inlineCode>{` is greatest when the pixels to the right and left of the pixel being convolved are most different, whereas the magnitude of `}<inlineCode parentName=\"p\">{`Gy`}</inlineCode>{` is greatest when the pixels above and below are most different. `}<inlineCode parentName=\"p\">{`Gx`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Gy`}</inlineCode>{` can therefore be considered gradient functions and effectively emphasise edges in the x and y directions respectively.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`     |-1 0 +1|               |-1 -2 -1|\nGx = |-2 0 +2| * A  ,   Gy = | 0  0  0| * A  ,  where A is the source image.\n     |-1 0 +1|               |+1 +2 +1|\n`}</code></pre>\n    <p>{`The gradient functions can be combined to form a gradient magnitude `}<inlineCode parentName=\"p\">{`G = sqrt(Gx^2 + Gy^2)`}</inlineCode>{`. This produces an image where all the areas with large changes in pixel intensity (edges) are highlighted, just hit the button below to see an example:`}</p>\n    <FlowerSobel transformType=\"sobel\" mdxType=\"FlowerSobel\" />\n    <img className={style.colourWheel} src={colourWheel} alt=\"colour wheel\" />\n    <p>{`In fact we can even find out the orientation of the edges by taking the arctan of the gradient functions, `}<inlineCode parentName=\"p\">{`Î¸ = atan(Gy/Gx)`}</inlineCode>{`. The orientation can then be mapped to a colour using a colour wheel. Try running the example Sobel operation below:`}</p>\n    <FlowerSobel transformType=\"sobelColour\" mdxType=\"FlowerSobel\" />\n    <p>{`Wow that's pretty fancy! Notice how the edges orientation maps to that of the colour wheel.`}</p>\n    <p>{`Finally have a play with the JavaScript tool below allowing you to create your own Sobel images. The saturation input controls the amount of orientational colour added. Also I've set it to scale the images to 600px for performance.`}</p>\n    <SobelTool mdxType=\"SobelTool\" />\n    <h2>{`Further reading / watching`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <a className=\"blueLink\" href=\"https://youtu.be/uihBwtPIBxM\">Finding the Edges (Sobel Operator) - Computerphile</a>\n      </li>\n      <li parentName=\"ul\">\n        <a className=\"blueLink\" href=\"https://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">Image Filters with Canvas</a>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}"],"names":["_frontmatter","layoutProps","MDXContent","components","props","mdxType","className","href","parentName","transformType","style","src","colourWheel","alt","isMDXComponent","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call"],"sourceRoot":""}