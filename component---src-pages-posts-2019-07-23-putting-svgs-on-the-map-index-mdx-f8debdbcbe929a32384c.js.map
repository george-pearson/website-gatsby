{"version":3,"file":"component---src-pages-posts-2019-07-23-putting-svgs-on-the-map-index-mdx-f8debdbcbe929a32384c.js","mappings":"gQAQaA,EAAe,CAC1B,MAAS,0BACT,SAAY,mEACZ,KAAQ,aACR,MAAS,4BAELC,EAAc,CAClBD,aAAAA,GAGa,SAASE,EAAW,GAGhC,IAFDC,EAAU,EAAVA,WACGC,GAAK,YAER,OAAO,SALS,UAKC,iBAAKH,EAAiBG,EAAK,CAAED,WAAYA,EAAYE,QAAQ,eAE5E,6BAAc,cAAGC,UAAU,WAAWC,KAAK,kCAAgC,sBAA2B,uMACtG,mNACA,gBAAKC,MAAO,CACVC,MAAO,OACPC,SAAU,SACTC,IAAKC,EAAAA,EAAcC,IAAI,oBAC1B,kTACA,mEAAoD,cAAGP,UAAU,WAAWC,KAAK,kCAAgC,UAAe,yDAChI,qBAAK,iBAAMO,WAAW,MAClB,UAAa,uBAAqB,y7CAgDtC,yQACA,gGACA,gBAAKN,MAAO,CACVC,MAAO,OACPC,SAAU,SACTC,IAAKI,EAAAA,EAAqBF,IAAI,4BACjC,sFACA,SAAC,IAAc,CAACR,QAAQ,oBACxB,mEAAoD,cAAGE,KAAK,oCAAoCD,UAAU,YAAU,UAAe,KAGvI,CAEAJ,EAAWc,gBAAiB,C,uBC9Fb,SAASC,EAA8BC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,CAAC,EAC5B,IAEIE,EAAKC,EAFLC,EAAS,CAAC,EACVC,EAAaC,OAAOC,KAAKP,GAE7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAEvB,OAAOE,CACT,C","sources":["webpack://blog/./src/pages/posts/2019-07-23-putting-svgs-on-the-map/index.mdx","webpack://blog/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport UKAndIreland from \"../../../../static/UKAndIreland.png\";\nimport UKAndIrelandCircles from \"../../../../static/UKAndIrelandCircles.png\";\nimport CirclesMapTool from \"../../../components/posts/circlesMapTool/circlesMapTool\";\nexport const _frontmatter = {\n  \"title\": \"Putting SVGs On The Map\",\n  \"subtitle\": \"Packing circles in a map of the UK and Ireland using JavaScript.\",\n  \"date\": \"2019-07-23\",\n  \"image\": \"/UKAndIrelandCircles.png\"\n};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`In the `}<a className=\"blueLink\" href=\"/2019-06-17-circles-everywhere\">{`previous blog post`}</a>{` I showed how to generate Scalable Vector Graphics (SVGs) of small circles packed inside a larger circle using JavaScript. In today's post I'm packing circles inside a map of the UK and Ireland.`}</p>\n    <p>{`The first thing we will need is a black and white map of the UK and Ireland. This is surprisingly difficult to find online, but after some intense search engine work I was able to get one:`}</p>\n    <img style={{\n      width: \"100%\",\n      maxWidth: \"30rem\"\n    }} src={UKAndIreland} alt=\"UK and Ireland\" />\n    <p>{`A black and white image allows us to easily check whether a pixel in the image is land (black) or sea (white), using its RGB(Red, Green, Blue) values. White, RGB(255, 255, 255), pixels will have an average RGB of 255 whereas black, RGB(0, 0, 0), pixels will have an average RGB of 0.`}</p>\n    <p>{`The majority of the code is much the same as `}<a className=\"blueLink\" href=\"/2019-06-17-circles-everywhere\">{`before`}</a>{`, we just need to change how the circles are placed:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const image = document.querySelector(\"#uk_and_ireland\");\nconst LX = image.width;\nconst LY = image.height;\nconst canvas = figure.querySelector(\"canvas\");\ncanvas.width = LX;\ncanvas.height = LY;\nconst ctx = canvas.getContext(\"2d\");\nctx.drawImage(image, 0, 0);\nconst imageData = ctx.getImageData(0, 0, LX, LY).data;\n\nfunction placeCircle(circles, radius, imageData, circleColours, LX, LY) {\n  //The guard number: if we don't place a circle within this number of trials, we give up.\n  let guard = 500;\n  while (guard > 0) {\n    // Pick a random position on the image.\n    const cx = randomIntFromInterval(0, LX - 1);\n    const cy = randomIntFromInterval(0, LY - 1);\n    const index = (cx + cy * LX) * 4;\n    const red = imageData[index + 0];\n    const green = imageData[index + 1];\n    const blue = imageData[index + 2];\n    const average = (red + green + blue) / 3;\n    const overlaps = circles.some(existingCircle =>\n      overlapWith(\n        cx,\n        cy,\n        radius,\n        existingCircle.cx,\n        existingCircle.cy,\n        existingCircle.r\n      )\n    );\n    // The circle doesn't overlap with any other circles and its in the dark image area.\n    if (!overlaps && average < 255 / 2) {\n      const circle = {\n        cx: cx,\n        cy: cy,\n        r: radius,\n        colour: circleColours[randomIntFromInterval(0, 3)],\n      };\n      circles.push(circle);\n      return;\n    }\n    guard -= 1;\n  }\n}\n`}</code></pre>\n    <p>{`We can use the half way point between 0 and 255 (128) to determine if a pixel is black or white. If the pixel is black and the circle doesn't overlap with any of the others then we place it otherwise we find a different location on the image.`}</p>\n    <p>{`The finished result (with 3000 circle place attempts!) looks pretty good:`}</p>\n    <img style={{\n      width: \"100%\",\n      maxWidth: \"30rem\"\n    }} src={UKAndIrelandCircles} alt=\"UK and Ireland Circles\" />\n    <p>{`Here's a smaller interactive version, so you can make your own:`}</p>\n    <CirclesMapTool mdxType=\"CirclesMapTool\" />\n    <p>{`As always all of the code is available on my `}<a href=\"https://github.com/george-pearson\" className=\"blueLink\">{`GitHub`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}"],"names":["_frontmatter","layoutProps","MDXContent","components","props","mdxType","className","href","style","width","maxWidth","src","UKAndIreland","alt","parentName","UKAndIrelandCircles","isMDXComponent","_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf"],"sourceRoot":""}