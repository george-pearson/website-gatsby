"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[915],{5086:function(e,t,n){n.r(t),n.d(t,{default:function(){return h}});var r=n(1151),a=n(7294),i=n(4578),o=n(982),l=n(9417),c="style-module--control--14a5d";let s=function(e){function t(t){var n;return(n=e.call(this,t)||this).state={color1:"#00ff00",color2:"#000000",running:!1},n.color1ChangeHandler=e=>{n.setState({color1:e.target.value})},n.color2ChangeHandler=e=>{n.setState({color2:e.target.value})},n.startClickHandler=()=>{n.state.running?(cancelAnimationFrame(n.requestId),n.requestId=void 0,n.setState({running:!1})):(n.setState({running:!0}),n.requestId=requestAnimationFrame(n.gameLoop))},n.gameLoop=()=>{null!==n.canvas.current&&(n.arr=n.iterate(n.arr),n.printToCanvas(n.arr,n.cellSize,n.canvas.current),n.requestId=requestAnimationFrame(n.gameLoop))},n.acornClickHandler=()=>{n.arr=n.create2Darray(n.N,n.N,n.DEAD),n.initialiseAcorn(n.arr),n.printToCanvas(n.arr,n.cellSize,n.canvas.current)},n.crossClickHandler=()=>{n.arr=n.create2Darray(n.N,n.N,n.DEAD),n.initialiseCross(n.arr),n.printToCanvas(n.arr,n.cellSize,n.canvas.current)},n.ALIVE=1,n.DEAD=0,n.N=200,n.cellSize=3,n.neighbourhood=[[1,0],[1,1],[0,1],[-1,1],[-1,0],[-1,-1],[0,-1],[1,-1]],n.arr=n.create2Darray(n.N,n.N,n.DEAD),n.canvas=a.createRef(),n}(0,i.Z)(t,e);var n=t.prototype;return n.componentDidMount=function(){const e=this.canvas.current;e.width=this.arr.length*this.cellSize,e.height=this.arr[0].length*this.cellSize,this.initialiseAcorn(this.arr),this.printToCanvas(this.arr,this.cellSize,e)},n.render=function(){return a.createElement("div",{className:"style-module--container--b0d11"},a.createElement("canvas",{ref:this.canvas}),a.createElement("div",{className:"style-module--controls--8241a"},a.createElement("input",{className:c,type:"color",value:this.state.color1,onChange:this.color1ChangeHandler}),a.createElement("input",{className:c,type:"color",value:this.state.color2,onChange:this.color2ChangeHandler}),a.createElement("button",{className:c,onClick:this.startClickHandler},this.state.running?a.createElement(o.G,{icon:l.XQY}):a.createElement(o.G,{icon:l.zc})),a.createElement("button",{className:c,onClick:this.crossClickHandler},"Cross"),a.createElement("button",{className:c,onClick:this.acornClickHandler},"Acorn")))},n.iterate=function(e){const t=this.clone2Darray(e);for(let n=0;n<e.length;n++)for(let r=0;r<e[0].length;r++){const a=this.getneighcount(e,n,r);e[n][r]===this.ALIVE?a<2?t[n][r]=this.DEAD:2===a||3===a?t[n][r]=this.ALIVE:a>3&&(t[n][r]=this.DEAD):e[n][r]===this.DEAD&&3===a&&(t[n][r]=this.ALIVE)}return t},n.getneighcount=function(e,t,n){let r=0;for(let a=0;a<this.neighbourhood.length;a++){const i=this.neighbourhood[a][0],o=this.neighbourhood[a][1];e[this.pbcz(t+i,e.length)][this.pbcz(n+o,e[t].length)]===this.ALIVE&&r++}return r},n.pbcz=function(e,t){return e>=t&&(e-=t),e<0&&(e+=t),e},n.printToCanvas=function(e,t,n){const r=n.getContext("2d"),a=r.getImageData(0,0,n.width,n.height),i=a.data,o=this.hexToRgb(this.state.color1),l=this.hexToRgb(this.state.color2);for(let c=0;c<e.length;c++)for(let n=0;n<e[0].length;n++){const r=e[c][n]===this.ALIVE;for(let a=0;a<t;a++)for(let s=0;s<t;s++){const u=4*(c*t+a+(n*t+s)*e.length*t);i[u+0]=r?o.r:l.r,i[u+1]=r?o.g:l.g,i[u+2]=r?o.b:l.b,i[u+3]=255}}r.putImageData(a,0,0)},n.hexToRgb=function(e){const t=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return t?{r:parseInt(t[1],16),g:parseInt(t[2],16),b:parseInt(t[3],16)}:null},n.initialiseAcorn=function(e){const t=Math.round(e.length/2),n=Math.round(e[0].length/2),r=[[0,0],[-3,-1],[-2,-1],[-2,1],[1,-1],[2,-1],[3,-1]];for(let a=0;a<r.length;a++){const i=r[a][0],o=r[a][1];e[t+i][n+o]=this.ALIVE}},n.initialiseCross=function(e){const t=e.length,n=e[0].length;for(let r=0;r<t;r++){const t=r;t>=0&&t<n&&(e[r][t]=this.ALIVE)}for(let r=t-1;r>=0;r--){const t=n-(r+1);t>=0&&t<n&&(e[r][t]=this.ALIVE)}},n.clone2Darray=function(e){return e.map((e=>e.slice(0)))},n.create2Darray=function(e,t,n){const r=[];for(let a=0;a<e;a++)r[a]=[];for(let a=0;a<e;a++)for(let e=0;e<t;e++)r[a][e]=n;return r},t}(a.Component);function u(e){const t=Object.assign({p:"p",em:"em",ul:"ul",li:"li",pre:"pre",code:"code"},(0,r.ah)(),e.components);return a.createElement(a.Fragment,null,a.createElement(t.p,null,"The ",a.createElement("a",{class:"blueLink",href:"https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life"},"Game of Life")," is a ",a.createElement("a",{class:"blueLink",href:"https://en.wikipedia.org/wiki/Cellular_automaton"},"cellular automataton")," designed by the British mathematician ",a.createElement("a",{class:"blueLink",href:"https://en.wikipedia.org/wiki/John_Horton_Conway"},"John Conway"),'. A cellular automataton is a mathematical model that consists of a grid of cells, with each cell having an finite number of states (e.g "on" or "off"). A new grid configuration (a new ',a.createElement(t.em,null,"generation"),") is created according to a fixed set of rules that determine the state of each cell based on its current state and the state of the cells around it (its ",a.createElement(t.em,null,"neighbourhood"),"). Cellular automata can be used to simulate a variety of real-world systems, from the ",a.createElement("a",{class:"blueLink",href:"https://en.wikipedia.org/wiki/Belousov%E2%80%93Zhabotinsky_reaction"},"Belousovâ€“Zhabotinsky reaction")," to ",a.createElement("a",{class:"blueLink",href:"https://blogs.msdn.microsoft.com/calvin_hsia/2014/09/30/fish-vs-sharks-predator-prey-simulation/"},"predator prey relationships"),"."),"\n",a.createElement(t.p,null,"In Conway's Game of Life, the grid is a 2D array of square cells each with two states ",a.createElement(t.em,null,"alive")," and ",a.createElement(t.em,null,"dead"),". Each cell interacts with its 8 neighbours, which are the cells that are horizontally, vertically, or diagonally adjacent to it. The rules are:"),"\n",a.createElement(t.ul,null,"\n",a.createElement(t.li,null,"Any live cell with fewer than two live neighbours dies, as if by underpopulation."),"\n",a.createElement(t.li,null,"Any live cell with two or three live neighbours lives on to the next generation."),"\n",a.createElement(t.li,null,"Any live cell with more than three live neighbours dies, as if by overpopulation."),"\n",a.createElement(t.li,null,"Any dead cell with exactly three live neighbours becomes a live cell, as if by reproduction."),"\n"),"\n",a.createElement(t.p,null,"We can get the number of alive neighbours of a cell in 2D array with the code below. Note we are applying ",a.createElement("a",{href:"https://en.wikipedia.org/wiki/Periodic_boundary_conditions",class:"blueLink"},"periodic boundary conditions")," in both the x and y directions."),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-javascript"},"var ALIVE = 1;\r\nvar DEAD = 0;\r\nvar N = 200;\r\nvar arr = create2Darray(N, N, DEAD); // Iitialises a new 2D array with array values set to 0.\r\nvar neighbourhood = [\r\n  [1, 0],\r\n  [1, 1],\r\n  [0, 1],\r\n  [-1, 1],\r\n  [-1, 0],\r\n  [-1, -1],\r\n  [0, -1],\r\n  [1, -1],\r\n];\r\n\r\n// Get number of ALIVE neighbours for point (x,y)\r\nfunction getneighcount(arr, x, y) {\r\n  var nc = 0;\r\n  for (var nn = 0; nn < neighbourhood.length; nn++) {\r\n    var dx = neighbourhood[nn][0];\r\n    var dy = neighbourhood[nn][1];\r\n    if (arr[pbcz(x + dx, arr.length)][pbcz(y + dy, arr[x].length)] === ALIVE) {\r\n      nc++;\r\n    }\r\n  }\r\n  return nc;\r\n}\r\n\r\n// Periodic boundary conditions in z-direction:\r\nfunction pbcz(iz, Lz) {\r\n  if (iz >= Lz) {\r\n    iz = iz - Lz;\r\n  }\r\n  if (iz < 0) {\r\n    iz = iz + Lz;\r\n  }\r\n  return iz;\r\n}\n")),"\n",a.createElement(t.p,null,"Then we can just turn the Game of Life rules into some simple JavaScript code:"),"\n",a.createElement(t.pre,null,a.createElement(t.code,{className:"language-javascript"},"var ALIVE = 1;\r\nvar DEAD = 0;\r\nvar N = 200;\r\nvar arr = create2Darray(N, N, DEAD); // Iitialises a new 2D array with array values set to 0.\r\nvar requestId;\r\ngameLoop();\r\n\r\n// Runs forever, call cancelAnimationFrame(requestId) to stop.\r\nfunction gameLoop() {\r\n  arr = iterate(arr);\r\n  print_to_canvas(arr);\r\n  requestId = requestAnimationFrame(gameLoop);\r\n}\r\n\r\n// Iterate the next state of the array.\r\nfunction iterate(oldArray) {\r\n  var newArray = clone2Darray(oldArray);\r\n  for (var x = 0; x < oldArray.length; x++) {\r\n    for (var y = 0; y < oldArray[0].length; y++) {\r\n      var aliveNeighbourCount = getneighcount(oldArray, x, y);\r\n      if (oldArray[x][y] === ALIVE) {\r\n        if (aliveNeighbourCount < 2) {\r\n          newArray[x][y] = DEAD; // Underpopulation kills cell.\r\n        } else if (aliveNeighbourCount === 2 || aliveNeighbourCount === 3) {\r\n          newArray[x][y] = ALIVE; // Surivies!\r\n        } else if (aliveNeighbourCount > 3) {\r\n          newArray[x][y] = DEAD; // Overpopulation kills cell.\r\n        }\r\n      } else if (oldArray[x][y] === DEAD && aliveNeighbourCount === 3) {\r\n        newArray[x][y] = ALIVE; // Reproduction.\r\n      }\r\n    }\r\n  }\r\n  return newArray;\r\n}\n")),"\n",a.createElement(t.p,null,"I've packaged the Game of Life code up into interactive tool below."),"\n",a.createElement(s),"\n",a.createElement(t.p,null,"The full code for this tool is available on my ",a.createElement("a",{href:"https://github.com/george-pearson",class:"blueLink"},"GitHub"),"."))}var h=function(e){void 0===e&&(e={});const{wrapper:t}=Object.assign({},(0,r.ah)(),e.components);return t?a.createElement(t,e,a.createElement(u,e)):u(e)}},270:function(e,t,n){n.r(t),n.d(t,{Head:function(){return m},default:function(){return g}});var r=n(5086),a=n(7294),i=n(3306),o=n(4527),l=n(1750),c=n(8013),s=n(5814),u=n(1151),h=n(8977);const d=e=>{let{data:{mdx:t},children:n}=e;const r={code:c.Z,inlineCode:s.Z},i=t;return a.createElement(o.Z,null,a.createElement("div",{className:h.fI},a.createElement("div",{className:h.v_},a.createElement(l.Z,{post:i}),a.createElement(u.Zo,{components:r},n))))},m=e=>{let{data:{mdx:t}}=e;const n=t;return a.createElement(i.Z,{page:"Post",post:n})};function g(e){return a.createElement(d,e,a.createElement(r.default,e))}}}]);
//# sourceMappingURL=component---src-templates-post-template-post-template-js-content-file-path-src-pages-posts-2019-04-06-the-game-of-life-index-mdx-6b09e7857c8284607e72.js.map