{"version":3,"file":"component---src-pages-posts-2019-02-09-hello-world-index-mdx-2c874ef8011dec766139.js","mappings":"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","sources":["webpack://blog/./src/pages/posts/2019-02-09-hello-world/index.mdx","webpack://blog/./src/pages/posts/common.module.css","webpack://blog/./static/photos/Sunset.jpg","webpack://blog/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport sunset from \"../../../../static/photos/Sunset.jpg\";\nimport * as commonStyle from \"../common.module.css\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    strong: \"strong\",\n    pre: \"pre\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"I've finally shipped! After about a month of what seems like going backwards and forwards I've made my first post on my brand new website. I’m going to try and do at least one post a month, and I plan to keep them relatively short. I can’t promise they won’t end up longer though if I really get into it!\"), \"\\n\", React.createElement(_components.h2, null, \"Jekyll and GitHub Pages\"), \"\\n\", React.createElement(_components.p, null, \"So you want to know how I made this site right? Well initially I was thinking of using what I know from work - C# \", React.createElement(\"a\", {\n    href: \"https://dotnet.microsoft.com/apps/aspnet/mvc\",\n    class: \"blueLink\"\n  }, \"ASP.NET MVC\"), \". But I figured it would be better if I learnt something new and all that server side setup and maintenance seemed like a pain. After a recommendation from a friend I found that GitHub offers \", React.createElement(_components.strong, null, \"free hosting\"), \" for websites running \", React.createElement(\"a\", {\n    class: \"blueLink\",\n    href: \"https://pages.github.com/\"\n  }, \"GitHub Pages\"), \". This seemed perfect for what I needed and no server side hassle! From GitHub Pages I was directed to \", React.createElement(\"a\", {\n    href: \"https://jekyllrb.com/\",\n    class: \"blueLink\"\n  }, \"Jekyll\"), \". Jekyll is an amazing open source blogging tool, which among other things has inbuilt support for \", React.createElement(\"a\", {\n    href: \"https://daringfireball.net/projects/markdown/\",\n    class: \"blueLink\"\n  }, \"Markdown\"), \" making writing blog posts a breeze[^1].\"), \"\\n\", React.createElement(_components.p, null, \"Here's an example of the JavaScript markdown which uses \", React.createElement(\"a\", {\n    href: \"https://pypi.org/project/Pygments/\",\n    class: \"blueLink\"\n  }, \"Pygments\"), \":\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"(function() {\\r\\n  console.log(\\\"Hello World! 😊\\\");\\r\\n})();\\n\")), \"\\n\", React.createElement(_components.p, null, \"Jekyll also has a great HTML templating through use of \", React.createElement(\"a\", {\n    href: \"https://jekyllrb.com/docs/includes/\",\n    class: \"blueLink\"\n  }, \"includes\"), \" and \", React.createElement(\"a\", {\n    href: \"https://jekyllrb.com/docs/step-by-step/04-layouts/\",\n    class: \"blueLink\"\n  }, \"layouts\"), \" which help keep your project well structured.\"), \"\\n\", React.createElement(_components.h2, null, \"Sass and Gulp\"), \"\\n\", React.createElement(_components.p, null, \"At work we predominantly use CSS libraries like \", React.createElement(\"a\", {\n    href: \"https://getbootstrap.com/\",\n    class: \"blueLink\"\n  }, \"Bootstrap\"), \", but one thing I decided fairly early on was that I was going to develop all the CSS myself to improve my front-end skills. After a bit of online research I decided I was going to use the \", React.createElement(\"a\", {\n    href: \"https://sass-lang.com/\",\n    class: \"blueLink\"\n  }, \"Sass\"), \" CSS templating language. Here's the Sass for those crazy blue links:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-scss\"\n  }, \"$color--skyblue: #00c1c1;\\r\\n$color--white: #fff;\\r\\n\\r\\n%transition-duration {\\r\\n  transition-duration: 0.5s;\\r\\n}\\r\\n\\r\\n.blueLink,\\r\\n%blueLink {\\r\\n  color: $color--skyblue;\\r\\n  text-decoration: none;\\r\\n  background-image: linear-gradient(\\r\\n    to top,\\r\\n    $color--skyblue,\\r\\n    $color--skyblue 50%,\\r\\n    transparent 50%,\\r\\n    transparent\\r\\n  );\\r\\n  background-position: 0% 0%;\\r\\n  background-size: 100% 200%;\\r\\n  @extend %transition-duration;\\r\\n\\r\\n  &:hover {\\r\\n    color: $color--white;\\r\\n    background-position: 0 100%;\\r\\n  }\\r\\n}\\n\")), \"\\n\", React.createElement(_components.p, null, \"Sass makes your CSS code simpler with things like variables \", React.createElement(_components.code, null, \"$color--skyblue\"), \", placeholder selectors \", React.createElement(_components.code, null, \"%transition-duration\"), \" and parent selectors \", React.createElement(_components.code, null, \"&:hover\"), \". Essentially Sass means you don't have to repeat yourself so often!\"), \"\\n\", React.createElement(_components.p, null, \"While investigating Sass I was directed to \", React.createElement(\"a\", {\n    href: \"https://gulpjs.com/\",\n    class: \"blueLink\"\n  }, \"Gulp\"), \" a DevOps build tool. Gulp essentially allows you to automate command line tools for things like:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Compiling Sass files to CSS when they change.\"), \"\\n\", React.createElement(_components.li, null, \"Minifying JavaScript and CSS files.\"), \"\\n\", React.createElement(_components.li, null, \"Running a Jekyll build when a markdown file is updated.\"), \"\\n\", React.createElement(_components.li, null, \"Reloading your browser once a build is complete.\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"This makes development a lot easier and faster. Here's an example of a gulp command that compiles a Sass file and minifies the outputed CSS:\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-javascript\"\n  }, \"/**\\r\\n * Compile .scss files.\\r\\n */\\r\\ngulp.task(\\\"sass\\\", function() {\\r\\n  return gulp\\r\\n    .src(\\\"_scss/main.scss\\\")\\r\\n    .pipe(sass().on(\\\"error\\\", sass.logError))\\r\\n    .pipe(cssnano())\\r\\n    .pipe(rename(\\\"main.min.css\\\"))\\r\\n    .pipe(gulp.dest(\\\"assets/css/\\\"));\\r\\n});\\n\")), \"\\n\", React.createElement(_components.h2, null, \"Photos\"), \"\\n\", React.createElement(\"div\", {\n    className: commonStyle.halfWidthContainer\n  }, React.createElement(\"div\", {\n    className: commonStyle.halfWidthLeft\n  }, React.createElement(\"img\", {\n    style: {\n      width: \"100%\"\n    },\n    src: sunset,\n    alt: \"sunset\"\n  })), React.createElement(\"div\", {\n    className: commonStyle.halfWidthRight\n  }, React.createElement(\"p\", null, React.createElement(_components.p, null, \"One thing I thought I'd share on this blog is\\r\\nsome \", React.createElement(\"a\", {\n    class: \"blueLink\",\n    href: \"/Photos\"\n  }, \"photos\"), \" I've\\r\\ntaken on my travels. In the future I'd like to develop that\\r\\narea into a gallery of some kind. The photos have been compressed\\r\\nusing \", React.createElement(\"a\", {\n    class: \"blueLink\",\n    href: \"https://squoosh.app/\"\n  }, \"Squoosh\"), \" making\\r\\nthem take up less space and load quickly (hopefully).\")))), \"\\n\", React.createElement(_components.h2, null, \"Conclusion\"), \"\\n\", React.createElement(_components.p, null, \"In fact creating this website was a lot easier than I imagined thanks to all the great freely available open source tools on the web. Now that I started writing about some of these tools I realised most of them probably need an entire post to be explained with any detail. So I might be doing some \\\"idiots guide to...\\\" posts in the near future. Anyhow hope you enjoyed my first post and are looking forward to the next instalment. 😏\"), \"\\n\", React.createElement(_components.p, null, \"[^1]: That's the plan anyway!\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","// extracted by mini-css-extract-plugin\nexport var halfWidthContainer = \"common-module--halfWidthContainer--10282\";\nexport var halfWidthLeft = \"common-module--halfWidthLeft--83707\";\nexport var halfWidthRight = \"common-module--halfWidthRight--3851a\";","export default __webpack_public_path__ + \"static/Sunset-c8281b903a04016037eaaa62ec1600a9.jpg\";","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h2","strong","pre","code","ul","li","_provideComponents","components","React","href","class","className","commonStyle","style","width","src","sunset","alt","wrapper","MDXLayout","halfWidthContainer","halfWidthLeft","halfWidthRight","MDXContext","useMDXComponents","contextComponents","emptyObject","MDXProvider","children","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}